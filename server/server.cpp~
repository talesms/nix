#include <iostream>
#include <string>
#include <strings.h>
#include <unistd.h>
#include <stdlib.h>
#include <sys/types.h> 
#include <sys/socket.h>
#include <netinet/in.h>


using namespace std;


int main(int argc, char *argv[])
{
  int sockfd, newsockfd, portno;
  socklen_t clilen;
  char buffer[2048];
  struct sockaddr_in serv_addr, cli_addr;

  if (argc < 2) {
    cout << "ERROR, no port provided" << endl;
    return -1;
  }

  sockfd = socket(AF_INET, SOCK_STREAM, 0);
  if(sockfd < 0)
    cout << "ERROR opening socket" << endl;

  bzero((char *) &serv_addr, sizeof(serv_addr));
  portno = atoi(argv[1]);
  serv_addr.sin_family = AF_INET;
  serv_addr.sin_addr.s_addr = INADDR_ANY;
  serv_addr.sin_port = htons(portno);

  cout << "Waiting client..." << endl;
  if (bind(sockfd, (struct sockaddr *) &serv_addr, 
	sizeof(serv_addr)) < 0) 
     cout << "ERROR on binding" << endl;
  listen(sockfd,5);
  clilen = sizeof(cli_addr);
  newsockfd = accept(sockfd, 
              (struct sockaddr *) &cli_addr, 
              &clilen);
  if (newsockfd < 0) 
     cout << "ERROR on accept" << endl;

  cout << "IP: " << cli_addr.sin_addr.s_addr << "conectou." << endl;

  for(;;)
  {

    if(write(newsockfd, "teste" , 6));

    sleep(30)
  }

  if(write(newsockfd, "end",3));

  close(newsockfd);
  close(sockfd);
  return 0;
}
